@model Gimify.Entities.Posts

<div class="container">
    <h2>Create Post</h2>
    <div id="errorMessages" class="alert alert-danger" style="display: none;"></div>
    <form asp-controller="Posts" asp-action="Create" method="post" id="postForm">
        @Html.AntiForgeryToken()

        <div class="mb-3">
            <label asp-for="name" class="form-label">Title</label>
            <input asp-for="name" class="form-control" />
            <span asp-validation-for="name" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="description" class="form-label">Description</label>
            <textarea asp-for="description" class="form-control" rows="5"></textarea>
            <span asp-validation-for="description" class="text-danger"></span>
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Public Post</button>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            $('#postForm').submit(function(e) {
                e.preventDefault();
                console.log('Attempting to submit...');

                $('#errorMessages').hide().empty();

                if (!$(this).valid()) {
                    console.log('Form is invalid');
                    return;
                }

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: $(this).serialize(),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            window.location.href = response.redirectUrl;
                        }
                    },
                    error: function(xhr) {
                        console.error('Error:', xhr.responseText);
                        try {
                            var response = JSON.parse(xhr.responseText);
                            if (response.errors && response.errors.length > 0) {
                                $('#errorMessages').show();
                                response.errors.forEach(function(error) {
                                    $('#errorMessages').append('<p>' + error + '</p>');
                                });
                            } else {
                                $('#errorMessages').show().append('<p>An unexpected error occurred.</p>');
                            }
                        } catch (e) {
                            $('#errorMessages').show().append('<p>An unexpected error occurred.</p>');
                        }
                    }
                });
            });
        });
    </script>
}